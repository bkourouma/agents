version: "3.8"

services:
  # FastAPI Backend
  chat360-backend:
    build: .
    container_name: chat360-backend
    restart: unless-stopped
    ports:
      - "8811:8000"
    environment:
      # Application Settings
      ENVIRONMENT: production
      PORT: 8000
      PYTHONUNBUFFERED: "1"
      WORKERS: 2

      # Database Configuration (SQLite for VPS)
      DATABASE_URL: sqlite:///app/data/chat360.db
      SQLITE_PATH: /app/data/chat360.db

      # API Keys (will be set via .env file)
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-this}

      # Security
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-your-jwt-secret-change-this}
      DEFAULT_ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}

      # Twilio (optional)
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID:-}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN:-}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER:-}

      # Voice Assistant
      VOICE_BASE_WEBHOOK_URL: ${VOICE_BASE_WEBHOOK_URL:-http://147.93.44.169:8811}

      # Logging
      LOG_LEVEL: INFO
      DEBUG: "false"

    volumes:
      # Persistent data
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
      - ./data:/app/data
      - ./docs:/app/docs
      - ./chroma_db_data:/app/chroma_db
      - ./sqlite_data:/app/sqlite_data
      - ./vanna_cache:/app/vanna_cache
      - ./logs:/app/logs

      # Static files
      - ./static:/app/static
      - ./templates:/app/templates

    networks:
      - chat360-network
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend - UPDATED SECTION
  chat360-frontend:
    build:
      context: ./dashboardapp
      dockerfile: Dockerfile.production
      args:
        # ðŸ”§ FIXED: Use build args instead of environment variables
        REACT_APP_API_URL: https://chat.engage-360.net/api
        REACT_APP_WS_URL: wss://chat.engage-360.net/ws
        NODE_ENV: production
    container_name: chat360-frontend
    restart: unless-stopped
    ports:
      - "3004:3000"
    networks:
      - chat360-network
    depends_on:
      - chat360-backend
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: chat360-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./dashboardapp/build:/usr/share/nginx/html
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    networks:
      - chat360-network
    depends_on:
      - chat360-backend
      - chat360-frontend

networks:
  chat360-network:
    driver: bridge

volumes:
  chat360-data:
    driver: local
  chat360-logs:
    driver: local